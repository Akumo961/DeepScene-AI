model_configs_json = '''
{
  "image_generation": {
    "primary_model": "stabilityai/stable-diffusion-xl-base-1.0",
    "fallback_model": "runwayml/stable-diffusion-v1-5",
    "settings": {
      "width": 1024,
      "height": 576,
      "num_inference_steps": 20,
      "guidance_scale": 7.5,
      "use_fp16": true,
      "enable_cpu_offload": true,
      "enable_xformers": true
    }
  },
  "text_generation": {
    "dialogue_model": "microsoft/DialoGPT-medium",
    "narrative_model": "gpt2",
    "settings": {
      "max_length": 200,
      "temperature": 0.8,
      "top_p": 0.9,
      "do_sample": true,
      "num_return_sequences": 1
    }
  },
  "classification": {
    "model": "facebook/bart-large-mnli",
    "genres": ["action", "drama", "comedy", "horror", "romance", "thriller", "adventure", "sci-fi"],
    "moods": ["happy", "sad", "angry", "fearful", "surprised", "disgusted", "neutral", "romantic", "tense", "mysterious"]
  },
  "text_to_speech": {
    "model": "microsoft/speecht5_tts",
    "settings": {
      "sample_rate": 16000,
      "format": "wav"
    }
  }
}
'''

# ============================================================================
# docker/Dockerfile - Docker containerization
# ============================================================================

dockerfile_content = '''
FROM python:3.9-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \\
    git \\
    wget \\
    curl \\
    ffmpeg \\
    libsm6 \\
    libxext6 \\
    libfontconfig1 \\
    libxrender1 \\
    libgl1-mesa-glx \\
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p data models results notebooks

# Set environment variables
ENV PYTHONPATH=/app
ENV STREAMLIT_SERVER_PORT=8501
ENV STREAMLIT_SERVER_ADDRESS=0.0.0.0

# Expose ports
EXPOSE 8501 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \\
  CMD curl -f http://localhost:8501/_stcore/health || exit 1

# Default command
CMD ["streamlit", "run", "app.py", "--server.address=0.0.0.0", "--server.port=8501"]
'''
